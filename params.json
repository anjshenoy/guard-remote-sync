{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Guard-remote-sync","body":"#Guard::RemoteSync [![Build Status](https://secure.travis-ci.org/pmcjury/guard-remote-sync.png)](http://travis-ci.org/pmcjury/guard-remote-sync)\r\n\r\n## Install\r\n\r\nPlease be sure to have [Guard](https://github.com/guard/guard) installed before continuing.\r\n\r\nPlease be sure to have the rsync command in your path.\r\n\r\nIt's recommended that you set up a ssh key if you're going to do remote syncing. \r\nAlterantively your can use a password file as per rsync default option --password-file=FILE, the drawback with this is you might commit your information to the repo, and that ain't no good.\r\nLastly, you can just type in your password everytime, but that's too much work. Add a ssh key! \r\n\r\nInstall the gem:\r\n\r\n```\r\n$ gem install guard-remote-sync\r\n```\r\n\r\nAdd guard definition to your Guardfile by running this command:\r\n\r\n```\r\n$ guard init remote-sync\r\n```\r\n\r\n## Usage\r\n\r\nPlease read [Guard usage doc](https://github.com/guard/guard#readme)\r\n\r\n## Guardfile\r\n\r\n### Any directory you need to rsync\r\n\r\n```ruby\r\nguard 'remote-sync',\r\n        :source => \".\", \r\n        :destination => '/export/home/{username}/tmp', \r\n        :user => '{user}',\r\n        :remote_address => '{address}',\r\n        :verbose => true, \r\n        :cli => \"--color\", \r\n        :sync_on_start => true do\r\n  \r\n  watch(%r{^.+\\.(js|xml|php|class|config)$})\r\nend\r\n```\r\nPlease read [Guard doc](https://github.com/guard/guard#readme) for more information about the Guardfile DSL.\r\n\r\n## Options\r\n\r\n### There are only two required options\r\n\r\n```ruby\r\nguard 'remote-sync', :source => '.', :destination => './tmp' do\r\n        # ...\r\nend\r\n```\r\n\r\n### Syncing to a remote machine required additional options\r\n```ruby\r\nguard 'remote-sync', \r\n        :source => \".\"                      # the directory to start the remote sync guard in\r\n        :destination => '/export/home/user' # the directory to sync to\r\n        :user => \"someone\"                  # the user to user ex: {USER}@somehost.com\r\n        :remote_address => 'company.com'    # the remote address ip or url\r\n        do\r\n                # ...\r\nend\r\n```\r\n\r\n### Using your own rsync command. This bypasses all validations, etc.\r\n```ruby\r\nguard 'remote-sync', :cli_options => 'rsync -Carv . user@company.com:/export/home/user' do\r\n        # ...\r\nend\r\n```\r\n\r\n### List of available options:\r\n\r\nMost of these options are human readable and correspond to rsync's options. Long options are used wherever\r\npossible to be more verbose\r\n\r\n```ruby\r\n:source => nil                      # the source directory to start in\r\n:destination => nil                 # the directory to sync to\r\n:user => nil                        # the user to use if remote syncing to another machine\r\n:remote_address => nil              # the remote address to the other machine ip|url\r\n:ssh => false                       # see rsync options : \"$ man rsync\"\r\n:cli_options => nil                 # used if you want to pass your own rsyn command\r\n:archive => true                    # see rsync options : \"$ man rsync\"\r\n:recursive => true                  # see rsync options : \"$ man rsync\"\r\n:verbose => true                    # see rsync options : \"$ man rsync\"\r\n:delete => true                     # see rsync options : \"$ man rsync\"\r\n:include => nil                     # see rsync options : \"$ man rsync\"\r\n:include_from => nil                # see rsync options : \"$ man rsync\"\r\n:exclude => nil                     # see rsync options : \"$ man rsync\"\r\n:exclude_from => \".rsync-filter\"    # see rsync options : \"$ man rsync\"\r\n:progress => true                   # see rsync options : \"$ man rsync\"\r\n:sync_on_start => false             # rsycn when the guard starts instead of waiting for a watcher to trigger guard\r\n:dry_run => false                   # see rsync options : \"$ man rsync\"\r\n:cvs_exclude => true                # see rsync options : \"$ man rsync\"\r\n:password_file => nil               # see rsync options : \"$ man rsync\"\r\n:timeout => 10                      # see rsync options : \"$ man rsync\"\r\n```\r\n\r\nDevelopment\r\n-----------\r\n\r\n* Source hosted at [GitHub](https://github.com/pmcjury/guard-remote-sync)\r\n* Report issues/Questions/Feature requests on [GitHub Issues](https://github.com/pmcjury/guard-remote-sync/issues)\r\n\r\nTesting\r\n-------\r\n\r\nPlease run `bundle exec rake spec` to test the source\r\n\r\nAuthor\r\n------\r\n\r\n[Patrick H. McJury](https://github.com/pmcjury)\r\n","tagline":"A more extensive and tested rsync guard"}